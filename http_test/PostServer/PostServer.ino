/* Пробная прошивка для сервера на ESP8266 отвечающая на JSON запросы и формирующая страничку с формой для запросов и иконкой.
 * при получении в POST запросе по адресу /postjson/ JSON структуры вида
 * {
 *  param1:"value1",
 *  param2:"value2",
 *  arrayParam:[11,22,33,44,55]
 * }
 * Парсит ее в DynamicJsonDocument doc
 * добавляет в него поле "status" со значением 201 сериализует и возвращает в response
 * 
 * Кроме того по корневому адресу формирует HTML страничку с формой для POST запроса. (запрос пробный, простейший, отправляет на сервер имя и значение поля.
 * По кнопке RESET происходит перезагрузка контроллера. (функции resetFunc и handleReset)
 * по адресу /favicon.ico возвращает иконку для отображения в браузере
 * */

#include <ArduinoJson.h>

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>


#ifndef STASSID
#define STASSID "RT-GPON-96C8"
#define STAPSK  "718281828459045"
#endif

// 'favicon-32x32', 32x32px  Иконка странички инструменты по ссылкам:
// https://www.mischianti.org/online-converter-file-to-cpp-gzip-byte-array-3/  и
// https://convertio.co/ru/
const char favicon [] PROGMEM = {  
0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x20, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0xA8, 0x10, 
0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 
0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA9, 0xAA, 0xA9, 0xFF, 0x99, 0x9C, 
0x9B, 0xFF, 0x69, 0x6B, 0x6B, 0xFF, 0xBB, 0xBB, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF4, 0xF3, 0xFF, 0xA8, 0xA9, 0xAC, 0xFF, 0xD5, 0xD7, 
0xF8, 0xFF, 0x97, 0x99, 0x9B, 0xFF, 0xBC, 0xBC, 0xBC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD7, 0xD7, 0xD6, 0xFF, 0x8B, 0x8B, 0xA0, 0xFF, 0x7E, 0x7C, 
0xC7, 0xFF, 0x7E, 0x7F, 0x7F, 0xFF, 0xF1, 0xF1, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0xB6, 0xB3, 0xFF, 0x86, 0x85, 0xB9, 0xFF, 0x6D, 0x6C, 
0xA4, 0xFF, 0x89, 0x89, 0x86, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0xB7, 0xB6, 0xFF, 0x9E, 0x9D, 0xD6, 0xFF, 0x77, 0x77, 
0x8B, 0xFF, 0xC5, 0xC5, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xCE, 0xCE, 
0xCE, 0xFF, 0xAE, 0xAD, 0xAE, 0xFF, 0x9A, 0x99, 0x9C, 0xFF, 0x97, 0x94, 0x99, 0xFF, 0x97, 0x94, 
0x99, 0xFF, 0x96, 0x94, 0x96, 0xFF, 0x88, 0x88, 0x92, 0xFF, 0x8B, 0x89, 0xCB, 0xFF, 0x84, 0x85, 
0x88, 0xFF, 0xF3, 0xF3, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xF7, 
0xF7, 0xFF, 0xC3, 0xC3, 0xC3, 0xFF, 0x9C, 0x99, 0x9F, 0xFF, 0xA3, 0x99, 0xA9, 0xFF, 0x9E, 0x90, 
0xA7, 0xFF, 0xA5, 0x94, 0xB0, 0xFF, 0xB7, 0xA4, 0xC3, 0xFF, 0xC1, 0xAD, 0xCF, 0xFF, 0xC3, 0xAE, 
0xD0, 0xFF, 0x97, 0x88, 0x9F, 0xFF, 0x68, 0x66, 0x8E, 0xFF, 0x69, 0x67, 0xAD, 0xFF, 0x69, 0x65, 
0x6B, 0xFF, 0x9E, 0x9B, 0xA1, 0xFF, 0xC6, 0xC6, 0xC6, 0xFF, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFD, 0xFD, 0xFF, 0xC7, 0xC7, 0xC7, 0xFF, 0x95, 0x90, 
0x99, 0xFF, 0xA0, 0x92, 0xA9, 0xFF, 0xC1, 0xAD, 0xCF, 0xFF, 0xDA, 0xC2, 0xEA, 0xFF, 0xDE, 0xC6, 
0xEF, 0xFF, 0xDF, 0xC6, 0xEF, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xE0, 0xC8, 
0xF1, 0xFF, 0xA1, 0x92, 0xA9, 0xFF, 0x7D, 0x7B, 0xB6, 0xFF, 0x69, 0x66, 0x8D, 0xFF, 0xB1, 0x9E, 
0xBB, 0xFF, 0xC1, 0xAD, 0xCE, 0xFF, 0x9D, 0x8F, 0xA5, 0xFF, 0x97, 0x92, 0x9A, 0xFF, 0xCA, 0xCA, 
0xCA, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xFF, 0xA5, 0xA3, 0xA6, 0xFF, 0x98, 0x8C, 0xA0, 0xFF, 0xC7, 0xB2, 
0xD5, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0x9F, 0x94, 0xAB, 0xFF, 0x8A, 0x89, 0xC1, 0xFF, 0x7E, 0x76, 0x8B, 0xFF, 0xD6, 0xBE, 
0xE5, 0xFF, 0xDE, 0xC5, 0xEE, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xC5, 0xB0, 0xD3, 0xFF, 0x95, 0x8A, 
0x9D, 0xFF, 0xA8, 0xA6, 0xA9, 0xFF, 0xF4, 0xF4, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE8, 0xE9, 
0xE8, 0xFF, 0x94, 0x8F, 0x96, 0xFF, 0xAA, 0x99, 0xB4, 0xFF, 0xDB, 0xC3, 0xEB, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xD8, 0xC1, 
0xE8, 0xFF, 0xD4, 0xBD, 0xE3, 0xFF, 0xD8, 0xC0, 0xE7, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xD4, 0xBD, 
0xE2, 0xFF, 0x85, 0x7F, 0xA0, 0xFF, 0x62, 0x60, 0xAA, 0xFF, 0x8C, 0x7E, 0x94, 0xFF, 0xDE, 0xC5, 
0xEE, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDA, 0xC2, 
0xEA, 0xFF, 0xA9, 0x99, 0xB3, 0xFF, 0x9A, 0x97, 0x9D, 0xFF, 0xED, 0xED, 0xED, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0x93, 0x8E, 
0x96, 0xFF, 0xB2, 0xA0, 0xBD, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC5, 0xEC, 0xFF, 0xB3, 0xA0, 0xBF, 0xFF, 0x95, 0x86, 
0x9F, 0xFF, 0xA9, 0x99, 0xB5, 0xFF, 0x9B, 0x8B, 0xA6, 0xFF, 0x8F, 0x80, 0x99, 0xFF, 0x91, 0x82, 
0x98, 0xFF, 0x58, 0x54, 0x8E, 0xFF, 0x6F, 0x6C, 0xA6, 0xFF, 0xBB, 0xA8, 0xC6, 0xFF, 0xDD, 0xC5, 
0xEC, 0xFF, 0xDB, 0xC3, 0xEB, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xB1, 0x9E, 0xBC, 0xFF, 0x98, 0x95, 0x9B, 0xFF, 0xF4, 0xF4, 
0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFC, 0xFF, 0xA4, 0xA1, 0xA5, 0xFF, 0xA9, 0x98, 
0xB4, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xDC, 0xC3, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD3, 0xBD, 0xE2, 0xFF, 0x9E, 0x8D, 0xA9, 0xFF, 0xCC, 0xB7, 
0xDA, 0xFF, 0xDB, 0xC4, 0xEA, 0xFF, 0xD5, 0xBE, 0xE3, 0xFF, 0xBE, 0xAA, 0xCB, 0xFF, 0x99, 0x8A, 
0xA3, 0xFF, 0x87, 0x7B, 0xA6, 0xFF, 0x79, 0x71, 0x8B, 0xFF, 0x83, 0x76, 0x8C, 0xFF, 0x8A, 0x7B, 
0x93, 0xFF, 0xC2, 0xAE, 0xD0, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xA9, 0x98, 0xB3, 0xFF, 0xA6, 0xA4, 
0xA6, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC4, 0xC4, 0xC5, 0xFF, 0x93, 0x86, 0x9A, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDA, 0xC3, 0xEA, 0xFF, 0xD9, 0xC2, 0xE9, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDD, 0xC5, 0xEC, 0xFF, 0xD0, 0xBB, 0xDF, 0xFF, 0xBF, 0xAB, 0xCC, 0xFF, 0xC0, 0xAC, 
0xCC, 0xFF, 0xD1, 0xBB, 0xDE, 0xFF, 0xD4, 0xBD, 0xE2, 0xFF, 0xC9, 0xB3, 0xD7, 0xFF, 0xC9, 0xB3, 
0xD7, 0xFF, 0xD7, 0xC0, 0xE7, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDA, 0xC2, 0xEA, 0xFF, 0x92, 0x87, 
0x99, 0xFF, 0xCA, 0xCA, 0xCA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xF6, 0xF6, 0xF6, 0xFF, 0x97, 0x92, 0x9A, 0xFF, 0xC8, 0xB3, 0xD6, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xCF, 0xB9, 
0xDE, 0xFF, 0x94, 0x84, 0x9F, 0xFF, 0x8A, 0x76, 0x98, 0xFF, 0x8E, 0x77, 0xA0, 0xFF, 0x8E, 0x77, 
0x9F, 0xFF, 0x8A, 0x77, 0x99, 0xFF, 0x93, 0x84, 0x9E, 0xFF, 0xD0, 0xBA, 0xDE, 0xFF, 0xDE, 0xC6, 
0xEE, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC5, 0xEE, 0xFF, 0xC0, 0xAC, 
0xCE, 0xFF, 0x93, 0x8F, 0x96, 0xFF, 0xFA, 0xFA, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xC6, 0xC6, 0xC6, 0xFF, 0x8F, 0x83, 0x98, 0xFF, 0xDE, 0xC5, 0xEE, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xED, 0xFF, 0xCF, 0xB9, 0xDE, 0xFF, 0x8C, 0x7B, 
0x98, 0xFF, 0x99, 0x7D, 0xAF, 0xFF, 0xBE, 0x99, 0xDA, 0xFF, 0xC4, 0x9E, 0xE1, 0xFF, 0xC4, 0x9E, 
0xE1, 0xFF, 0xBE, 0x99, 0xDA, 0xFF, 0x9C, 0x7F, 0xB1, 0xFF, 0x8E, 0x7C, 0x9A, 0xFF, 0xD1, 0xBA, 
0xDF, 0xFF, 0xDD, 0xC4, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0x96, 0x8A, 0x9F, 0xFF, 0xD1, 0xD1, 0xD2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xA9, 0xA8, 0xAB, 0xFF, 0xB7, 0xA4, 0xC3, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xAB, 0x98, 0xB8, 0xFF, 0xA1, 0x84, 
0xB8, 0xFF, 0xC6, 0x9F, 0xE2, 0xFF, 0xC4, 0x9E, 0xE0, 0xFF, 0xC3, 0x9D, 0xDF, 0xFF, 0xC3, 0x9D, 
0xDF, 0xFF, 0xC4, 0x9E, 0xE0, 0xFF, 0xC6, 0x9F, 0xE2, 0xFF, 0xA3, 0x85, 0xBA, 0xFF, 0xA0, 0x8E, 
0xAC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC6, 
0xEF, 0xFF, 0xAB, 0x9A, 0xB7, 0xFF, 0x9D, 0x9B, 0x9E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFA, 
0xF9, 0xFF, 0xA1, 0x9B, 0xA4, 0xFF, 0xD1, 0xBB, 0xE0, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD7, 0xC1, 0xE7, 0xFF, 0xA1, 0x8B, 0xB1, 0xFF, 0xC1, 0x9B, 
0xDD, 0xFF, 0xB7, 0x92, 0xD0, 0xFF, 0xA6, 0x81, 0xBB, 0xFF, 0xC0, 0x9A, 0xDB, 0xFF, 0xBF, 0x99, 
0xDA, 0xFF, 0xA6, 0x81, 0xBA, 0xFF, 0xB7, 0x92, 0xD1, 0xFF, 0xC0, 0x9B, 0xDD, 0xFF, 0xAA, 0x91, 
0xBB, 0xFF, 0xD9, 0xC1, 0xE8, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC4, 
0xED, 0xFF, 0xCA, 0xB4, 0xD8, 0xFF, 0x9A, 0x96, 0x9D, 0xFF, 0xFD, 0xFD, 0xFC, 0xFF, 0xED, 0xED, 
0xED, 0xFF, 0x9A, 0x92, 0xA0, 0xFF, 0xD9, 0xC1, 0xE9, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD5, 0xBE, 0xE4, 0xFF, 0x99, 0x83, 0xAA, 0xFF, 0xC2, 0x9C, 
0xDE, 0xFF, 0xAE, 0x89, 0xC5, 0xFF, 0x93, 0x6E, 0xA2, 0xFF, 0xBD, 0x97, 0xD7, 0xFF, 0xBC, 0x96, 
0xD6, 0xFF, 0x93, 0x6E, 0xA2, 0xFF, 0xAF, 0x89, 0xC6, 0xFF, 0xC0, 0x99, 0xDC, 0xFF, 0xB2, 0x96, 
0xC4, 0xFF, 0xD7, 0xC0, 0xE6, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xD6, 0xBF, 0xE5, 0xFF, 0x9F, 0x97, 0xA3, 0xFF, 0xF5, 0xF6, 0xF5, 0xFF, 0xE5, 0xE5, 
0xE5, 0xFF, 0x94, 0x8A, 0x9A, 0xFF, 0xDB, 0xC3, 0xEB, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDA, 0xC3, 0xEA, 0xFF, 0xA5, 0x8F, 0xB4, 0xFF, 0xBB, 0x97, 
0xD6, 0xFF, 0xC2, 0x9C, 0xDE, 0xFF, 0xBE, 0x99, 0xD9, 0xFF, 0xC3, 0x9D, 0xDF, 0xFF, 0xC3, 0x9D, 
0xDF, 0xFF, 0xBE, 0x99, 0xDA, 0xFF, 0xC1, 0x9B, 0xDD, 0xFF, 0xB6, 0x91, 0xD0, 0xFF, 0x9F, 0x8A, 
0xAE, 0xFF, 0xDA, 0xC3, 0xEA, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xD9, 0xC1, 0xE8, 0xFF, 0x9F, 0x96, 0xA5, 0xFF, 0xF1, 0xF2, 0xF1, 0xFF, 0xE8, 0xE8, 
0xE8, 0xFF, 0x97, 0x8E, 0x9E, 0xFF, 0xDB, 0xC2, 0xEA, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC5, 0xEE, 0xFF, 0xB6, 0xA2, 0xC2, 0xFF, 0x8F, 0x78, 
0xA1, 0xFF, 0xC1, 0x9C, 0xDD, 0xFF, 0xC5, 0x9E, 0xE1, 0xFF, 0xC3, 0x9D, 0xDF, 0xFF, 0xC3, 0x9D, 
0xDF, 0xFF, 0xC3, 0x9C, 0xDF, 0xFF, 0xBC, 0x95, 0xD7, 0xFF, 0x91, 0x78, 0xA3, 0xFF, 0xB0, 0x9D, 
0xBC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xD8, 0xC0, 0xE7, 0xFF, 0x9E, 0x96, 0xA3, 0xFF, 0xF3, 0xF3, 0xF2, 0xFF, 0xF4, 0xF4, 
0xF4, 0xFF, 0x9E, 0x97, 0xA3, 0xFF, 0xD6, 0xBF, 0xE6, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDA, 0xC3, 0xEA, 0xFF, 0xA5, 0x94, 
0xB1, 0xFF, 0x82, 0x6E, 0x92, 0xFF, 0xA4, 0x85, 0xBB, 0xFF, 0xB8, 0x94, 0xD3, 0xFF, 0xB5, 0x90, 
0xCF, 0xFF, 0xA0, 0x80, 0xB6, 0xFF, 0x80, 0x6B, 0x8E, 0xFF, 0xA5, 0x94, 0xB1, 0xFF, 0xDB, 0xC3, 
0xEA, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xD2, 0xBB, 0xE1, 0xFF, 0x9F, 0x99, 0xA3, 0xFF, 0xF9, 0xFA, 0xF9, 0xFF, 0xFE, 0xFF, 
0xFE, 0xFF, 0xA6, 0xA2, 0xA8, 0xFF, 0xC7, 0xB2, 0xD5, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xB7, 0xA4, 0xC4, 0xFF, 0x97, 0x86, 0xA2, 0xFF, 0x8E, 0x7C, 0x9A, 0xFF, 0x8E, 0x7B, 
0x9A, 0xFF, 0x97, 0x86, 0xA2, 0xFF, 0xB6, 0xA3, 0xC2, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC5, 
0xEE, 0xFF, 0xBC, 0xA8, 0xC9, 0xFF, 0x96, 0x93, 0x97, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xB4, 0xB3, 0xB4, 0xFF, 0x9F, 0x8F, 0xA9, 0xFF, 0xDE, 0xC6, 0xEF, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xD9, 0xC1, 0xE8, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xD9, 0xC2, 0xE9, 0xFF, 0xD9, 0xC2, 
0xE9, 0xFF, 0xDD, 0xC5, 0xEC, 0xFF, 0xD8, 0xC1, 0xE8, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDF, 0xC6, 
0xEF, 0xFF, 0x9E, 0x8F, 0xA8, 0xFF, 0xB6, 0xB6, 0xB7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xE3, 0xE3, 0xE3, 0xFF, 0x8D, 0x85, 0x93, 0xFF, 0xD9, 0xC1, 0xE8, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xCA, 0xB4, 
0xD8, 0xFF, 0x5B, 0x53, 0x60, 0xFF, 0xB1, 0x9F, 0xBD, 0xFF, 0xDE, 0xC6, 0xEF, 0xFF, 0xDE, 0xC6, 
0xEE, 0xFF, 0xAE, 0x9C, 0xBA, 0xFF, 0x5B, 0x54, 0x60, 0xFF, 0xCB, 0xB6, 0xD9, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD4, 0xBD, 
0xE3, 0xFF, 0x95, 0x8E, 0x9B, 0xFF, 0xED, 0xED, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAA, 0xA8, 0xAB, 0xFF, 0xAB, 0x9A, 0xB6, 0xFF, 0xDE, 0xC6, 
0xEE, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD3, 0xBC, 
0xE2, 0xFF, 0x97, 0x87, 0xA1, 0xFF, 0xC5, 0xB0, 0xD3, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xC4, 0xAF, 0xD2, 0xFF, 0x97, 0x88, 0xA1, 0xFF, 0xD4, 0xBD, 0xE2, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDF, 0xC6, 0xEF, 0xFF, 0xA7, 0x97, 
0xB2, 0xFF, 0xA9, 0xA8, 0xAA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xFF, 0x74, 0x6B, 0x79, 0xFF, 0xCD, 0xB7, 
0xDC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDF, 0xC6, 0xEF, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDF, 0xC6, 0xEF, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xD2, 0xBC, 
0xE1, 0xFF, 0xD4, 0xBE, 0xE4, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC5, 0xEE, 0xFF, 0xC5, 0xB0, 0xD3, 0xFF, 0x84, 0x7E, 
0x88, 0xFF, 0xEB, 0xEC, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xBB, 0xC4, 0xFF, 0xA3, 0x8F, 0xAE, 0xFF, 0x91, 0x83, 
0x9A, 0xFF, 0xD6, 0xBF, 0xE4, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xC3, 0xAF, 0xD0, 0xFF, 0xCD, 0xB8, 0xDC, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD8, 0xC1, 0xE7, 0xFF, 0xB3, 0xA2, 
0xBE, 0xFF, 0xCF, 0xB9, 0xDE, 0xFF, 0xDC, 0xC4, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xD1, 0xBB, 0xDF, 0xFF, 0x88, 0x79, 0x91, 0xFF, 0x87, 0x7B, 
0x8E, 0xFF, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xF8, 0xF9, 0xF8, 0xFF, 0xB1, 0xA8, 0xB8, 0xFF, 0xD2, 0xB6, 0xE3, 0xFF, 0xAF, 0x9E, 
0xBB, 0xFF, 0x95, 0x87, 0x9E, 0xFF, 0xD3, 0xBD, 0xE2, 0xFF, 0xDD, 0xC5, 0xEE, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xC9, 0xB5, 0xD7, 0xFF, 0xB0, 0xA0, 0xBC, 0xFF, 0xDA, 0xC2, 
0xE9, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDD, 0xC4, 0xED, 0xFF, 0xCC, 0xB7, 0xDA, 0xFF, 0xB3, 0xA3, 0xBF, 0xFF, 0xC3, 0xAF, 
0xD0, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC6, 
0xEE, 0xFF, 0xCE, 0xB9, 0xDC, 0xFF, 0x8C, 0x7F, 0x94, 0xFF, 0xAE, 0x9B, 0xBA, 0xFF, 0xAA, 0x93, 
0xB6, 0xFF, 0xC0, 0xBF, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xF9, 0xF9, 0xF8, 0xFF, 0xAC, 0xA3, 0xB1, 0xFF, 0xD2, 0xB8, 0xE3, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xB6, 0xA4, 0xC1, 0xFF, 0x94, 0x87, 0x9C, 0xFF, 0xC3, 0xAE, 0xD0, 0xFF, 0xDE, 0xC6, 
0xEE, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xC5, 0xB2, 0xD3, 0xFF, 0xAD, 0x9E, 
0xB9, 0xFF, 0xD2, 0xBC, 0xE1, 0xFF, 0xDD, 0xC4, 0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xD8, 0xC1, 0xE8, 0xFF, 0xD8, 0xC1, 0xE7, 0xFF, 0xDD, 0xC5, 
0xED, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xBE, 0xAA, 
0xCB, 0xFF, 0x8D, 0x80, 0x95, 0xFF, 0xB4, 0xA2, 0xC0, 0xFF, 0xDF, 0xC5, 0xF0, 0xFF, 0xA6, 0x92, 
0xB1, 0xFF, 0xBE, 0xBE, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBB, 0xB8, 0xBC, 0xFF, 0xA4, 0x95, 0xAF, 0xFF, 0xD6, 0xC0, 
0xE5, 0xFF, 0xD6, 0xC1, 0xE3, 0xFF, 0x93, 0x88, 0x98, 0xFF, 0x85, 0x80, 0x89, 0xFF, 0xA2, 0x94, 
0xAC, 0xFF, 0xD0, 0xB9, 0xDE, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xDE, 0xC6, 0xEE, 0xFF, 0xCF, 0xB9, 
0xDD, 0xFF, 0xD5, 0xBE, 0xE4, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDE, 0xC5, 
0xEE, 0xFF, 0xDD, 0xC5, 0xED, 0xFF, 0xCC, 0xB6, 0xDA, 0xFF, 0x9F, 0x91, 0xA7, 0xFF, 0x78, 0x71, 
0x7C, 0xFF, 0xA7, 0x9A, 0xB0, 0xFF, 0xDB, 0xC6, 0xEA, 0xFF, 0xC6, 0xB1, 0xD4, 0xFF, 0x97, 0x8E, 
0x9B, 0xFF, 0xE8, 0xE8, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xF5, 0xF5, 0xFF, 0xC2, 0xC1, 0xC3, 0xFF, 0xBF, 0xB9, 
0xC3, 0xFF, 0xBE, 0xB8, 0xC1, 0xFF, 0xC9, 0xC7, 0xC9, 0xFF, 0xF2, 0xF2, 0xF2, 0xFF, 0xC9, 0xC9, 
0xC9, 0xFF, 0xAC, 0xA6, 0xB0, 0xFF, 0x9D, 0x91, 0xA5, 0xFF, 0xBB, 0xA8, 0xC7, 0xFF, 0xD4, 0xBD, 
0xE3, 0xFF, 0xDA, 0xC2, 0xEA, 0xFF, 0xDB, 0xC3, 0xEB, 0xFF, 0xDC, 0xC4, 0xEC, 0xFF, 0xDC, 0xC4, 
0xEC, 0xFF, 0xDB, 0xC3, 0xEB, 0xFF, 0xD9, 0xC1, 0xE9, 0xFF, 0xD1, 0xBB, 0xE0, 0xFF, 0xB7, 0xA4, 
0xC3, 0xFF, 0x9B, 0x8F, 0xA3, 0xFF, 0xAA, 0xA5, 0xAE, 0xFF, 0xCA, 0xC9, 0xCA, 0xFF, 0xE0, 0xE0, 
0xE0, 0xFF, 0xBC, 0xB9, 0xBE, 0xFF, 0xC1, 0xBB, 0xC5, 0xFF, 0xB9, 0xB4, 0xBB, 0xFF, 0xD8, 0xD8, 
0xD8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 
0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xF9, 0xF9, 0xF9, 0xFF, 0xD2, 0xD2, 0xD2, 0xFF, 0xB0, 0xAD, 0xB1, 0xFF, 0xB2, 0xAB, 
0xB7, 0xFF, 0x9F, 0x95, 0xA6, 0xFF, 0x8B, 0x7F, 0x93, 0xFF, 0x88, 0x7B, 0x91, 0xFF, 0x88, 0x7B, 
0x91, 0xFF, 0x8C, 0x80, 0x94, 0xFF, 0xA0, 0x95, 0xA6, 0xFF, 0xAE, 0xA7, 0xB2, 0xFF, 0xB0, 0xAE, 
0xB1, 0xFF, 0xD4, 0xD4, 0xD4, 0xFF, 0xFA, 0xFA, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const char* ssid     = STASSID;
const char* password = STAPSK;

ESP8266WebServer server(80);
DynamicJsonDocument doc(1024);  //сюда будет десериализовываться пришедший JSON

const int led = LED_BUILTIN;
const int resetPin = D5;

const String postForms = "<html>\r\n\
  <head>\r\n\
    <title>ESP8266 Web Server POST handling</title>\r\n\
    <style>\r\n\
      body { background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; }\r\n\
    </style>\r\n\
  </head>\r\n\
  <body>\r\n\
    <h1>POST plain text to /postplain/</h1><br>\r\n\
    <form method=\"post\" enctype=\"text/plain\" action=\"/postjson/\">\r\n\
      <input type=\"text\" name=\'\"hello\"\' value=\'\"world\"\'><br>\r\n\
      <input type=\"submit\" value=\"Submit\">\r\n\
    </form>\r\n\
<h1>POST form reset /reset/</h1><br>\r\n\
    <form method=\"post\" enctype=\"application/x-www-form-urlencoded\" action=\"/reset/\">\r\n\
      <input type=\"submit\" value=\"Reset\">\r\n\
    </form>\r\n\
  </body>\r\n\
</html>";

void handleRoot() {
  Serial.println("handleRoot");
  digitalWrite(led, 1);
  server.send(200, "text/html", postForms);
  digitalWrite(led, 0);
}

void(* resetFunc) (void) = 0; 
void handleReset() {
  Serial.println("handleReset");  
  server.send(200, "text/html", "ok");
  //digitalWrite(resetPin, 1);
  resetFunc();
}

void handleJSON() {  //ответчик на JSON запросы
  Serial.println("handleJSON");
  switch (server.method()) {      //переключатель ответов в зависимости от метода запроса
  case HTTP_POST:       //POST запрос
  Serial.println("case HTTP_POST");
    digitalWrite(led, 1);
    server.enableCORS(true); // включаем CORS заголовки
    deserializeJson(doc, server.arg("plain"));  // десериализуем JSON из request
    Serial.print("param1=");    
    Serial.println(doc["param1"].as<String>());    //читаем параметры десериализованного JSON
    Serial.print("param2=");
    Serial.println(doc["param2"].as<String>());
    Serial.print("arrayParam[2]=");
    Serial.println(doc["arrayParam"][2].as<int>()); //пример обращения к элементу массива
    doc.createNestedObject("status");  // добавляем в распарсенный JSON новый объект
    doc["status"] = 201; // и задаем ему знначение
    char json_string[256];
    serializeJson(doc, json_string); // сереализуем все с добавками взад
    server.sendHeader(F("Access-Control-Allow-Headers"), "Content-Type, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Authorization, X-Requested-With");  //Устанавливаем заголовки для response
    server.send(200, "application/json",  json_string); //формируем response
    Serial.print("200: POST body was:\n");
    Serial.println(json_string);
    digitalWrite(led, 0);
   break;
  case HTTP_OPTIONS:  //OPTIONS запрос обычно вызывается для разведки CORS перед вызовом POST
   Serial.println("case HTTP_OPTIONS");
   digitalWrite(led, 1);
    server.enableCORS(true);
    server.sendHeader(F("Access-Control-Allow-Headers"), "Content-Type, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Access-Control-Allow-Methods, Authorization, X-Requested-With");
    server.send(200, "text/plain", "ok");
    break;
  default:    //ответчик на необрабатываемые методы
  Serial.println("case default");
     digitalWrite(led, 1);
    server.enableCORS(true);
    server.sendHeader(F("Access-Control-Allow-Headers"), "Content-Type, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Access-Control-Allow-Methods, Authorization, X-Requested-With");
    server.send(405, "text/plain", "Method Not Allowed");
    Serial.print("405: Method ");
    Serial.print(server.method());
    Serial.println(" Not Allowed");
    digitalWrite(led, 0);
  }

}

void handleNotFound() {
  Serial.println("handleNotFound");
  digitalWrite(led, 1);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
  digitalWrite(led, 0);
}

void handleFavicon() {// иконка странички в браузере
  server.send_P(200, "image/x-icon", favicon, sizeof(favicon));
}

void setup(void) {
  pinMode(led, OUTPUT);
  pinMode(resetPin, OUTPUT);
  digitalWrite(led, 0);
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  WiFi.setAutoReconnect(true);
  WiFi.persistent(true);
  if (MDNS.begin("esp8266")) {
    Serial.println("MDNS responder started");
  }
  server.on("/", handleRoot);

  server.on("/postjson/", handleJSON);
  
  server.on("/reset/", handleReset);

  server.onNotFound(handleNotFound);
  server.on("/favicon.ico", handleFavicon); // иконка странички в браузере
  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  server.handleClient();
}
